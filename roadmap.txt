Websocket API

Позволяет не запрашивать каждый раз информацию об ордерах, за которыми нужно следить.
Можно подписаться на события, которые происходят с ордерами. И реагировать на них
по мере их поступления.

Теперь. При запуске скрипт будет пробегать по списку активных ботов, проверять статусы
ордеров этих ботов и в случае их изменения предпринимать соответствующие действия

Затем при получении события об обновлении активного ордера нужно найти соответствуюшего бота,
сообщить ему об изменении ордера.

Это должно значительно снизить количество передаваемой инфы между скриптом и сервером биржи, это
может решить проблему маштабирования.
Осталось все переписать под вебсокеты и протестить это




==========================================================================
*** По рамках одной пары можно проверять не все ордера, а только 2 крайних
*** Операция остановки ботов
*** Операция изменения inOrder/outOrder
*** Client->replaceOrder()

*** Минимальный веб интерфейс
        Список ботов, их статусы
        Отключение\Включение ботов
        создание ботов



1. Выделить более универсальный класс бота
    -Настройки цены закупки
    -Настройки цены продажи
    -Настройки объема

2. Попробовать торговать им на битке
     покупать при цене текущая -30
     продовать при цене +30 от закупки

3. Телеграм уведомления

4. Коррекция настроек бота через телеграм ???

5. Вменяемое логирование

6. Масштабирование

7. Разобраться как газлом отправлять повторный запрос в случае некоторых ошибок

=====================================
Работа ботов.

Ордера ботов, размещенные на бирже записываются в таблицу orders

По таблице ордеров определяется список пар, по которым нужно отслеживать трейды.

По паре получаем список трейдов за последний период. Определяем минимальный прайс трейда на продажу
Соответственно этуому трейду ищем все ордера на покупку по паре, цена закупики которых стоит выше последнего
продажного трейда, проверяем их на исполнение.
Аналогично поступаем стрейдами на закупку и ордерами на прожаду.
Запускаем на выполнение ботов, которым принадлежать найденные ордера.

Это позволит снизить количество ордеров, которые нужно будет напрямую проверять на бирже.

==================================================

Новый бот на пачку ордеров.

У бота будет список ордеров на покупку и на продажу. Выставлять на биржу он должен только по 3 ордера из каждогоо
списка. При исполнение ордера из одного списка, должен создаваться ордер в противоположном списки
с таким же объемом но измененной ценой.
В итоге бот должен следить за 6ю оредрами вместо того чтобы обрабатывать полный список ордеров на покупку  на продажу

===================================

Для одного цикла проверки оредров забирать список активных ордеров и список последний трейдов 1 раз.
освобождать перед следующей итерацией

===================================

Бот должен обрабатывать частичное выполнение ордеров

===========

При "изменении" ордера на hitbtc.com меняется его clientID. Один

================================
2020.03.07 TradeListener работает вполне стабильно.
    - оформить код TradeListener, убрать дебажные логи
    - создать CommandListener, чтобы можно обыло общаться с демоном извне
           Нужно получать статусы
           Включать\выключать логирование
           Добавлять\удалять apikeys
           Отправлять сообщения на биржу от имени нужных apikey, получить ответ
    -